name: CI

on:
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.adminCommand(\"ping\")'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 - --version 2.1.3
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/pypoetry
            ~/.cache/pip
          key: poetry-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry lock
          poetry install --no-root

      - name: Wait for Mongo
        run: |
          for i in {1..30}; do
            if mongosh --host 127.0.0.1 --eval 'db.adminCommand("ping")' > /dev/null 2>&1; then
              echo "MongoDB is ready!"
              exit 0
            fi
            echo "Waiting for MongoDB..."
            sleep 2
          done
          echo "MongoDB did not start in time" >&2
          exit 1

      - name: Run tests
        run: |
          set -a
          source .github/envs/.env.test
          set +a
          MODE=TEST PYTHONPATH=. poetry run pytest -v --cov=app --cov-report=term-missing --disable-warnings --maxfail=1
